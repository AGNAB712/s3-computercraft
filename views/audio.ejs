<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Custom audio</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/themes/prism.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/prism.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/components/prism-lua.min.js"></script>
  <link rel="stylesheet" href="/styles.css">
</head>
<body>
  <div class="container">
    <h1>Custom audio</h1>
    <p>Using the DFPWM library in computercraft, you can play custom audio files!</p>
    <p>DFPWM is a signed 8 bit audio file, so that means that the quality may not be the best, and the audio is mono. It's very compressed and it's easy to convert directly into sine waves, which is why CC uses it.</p>
    <h2>Conversion</h2>
    <p>If you don't have an api to convert something like a youtube video into a dfpwm file, I reccomend using <a href="https://music.madefor.cc" target="_blank">music.madefor.cc</a>, which can convert almost any audio file into a dfpwm!</p>
    <h2>Using custom audio</h2>
    <p>Even though DFPWM files are very compressed and small, sometimes they are too large for computercraft if you have a long song. I reccomend using something to host the file as raw data, like discord, and then streaming it in using the HTTP library (you will learn a lot more about this soon)</p>
    <p>Here is an example of how to stream the audio into a speaker</p>
    <pre><img src="/img/copy.png" id="lua-copy-image" alt="Copy text" onclick="copyText()"><code class="language-lua" id="toCopy">local url = "https://cdn.discordapp.com/attachments/..." --input the direct link to your dfpwm file here
--you can use discord to host the file, just send it and then 
--right click the blue link part and click "copy link"
local response, err = http.get(url) --we will get into this later, this gets data from the internet

local speaker = peripheral.find("speaker")
local decoder = require("cc.audio.dfpwm").make_decoder()

while true do
  local chunk = response.read(16*1024) --break it up into 16kb chunks
  if not chunk then break end --if there's no more chunks then stop playing

  local buffer = decoder(chunk) --decode the chunk of audio
  while not speaker.playAudio(buffer) do --plays the audio, but if it's not playing anything continue
    os.pullEvent("speaker_audio_empty") --wait until the audio buffer of the speaker is empty to repeat
  end
end</code></pre>
    <br>
    <p>It's alright if you don't completely understand this, there are some things here that we haven't learned about</p>
    <p>If you would like to learn more, I reccomend looking at how tweaked.cc explains this. If you need help with setting this up, just ask me.</p>

    <h2>Tweaked.cc resources</h2>
    <a href="https://tweaked.cc/guide/speaker_audio.html" target="_blank">Playing audio with speakers</a>
    <a href="https://tweaked.cc/library/cc.audio.dfpwm.html" target="_blank">DFPWM library</a>
    <a href="https://tweaked.cc/peripheral/speaker.html#v:playAudio" target="_blank">Speaker playAudio function</a>

    <%- sidebar %>

    
  </div>

<script>
  function copyText() {
      const parentElement = document.getElementById('toCopy');
      let textToCopy = '';

      for (let i = 0; i < parentElement.childNodes.length; i++) {
          const child = parentElement.childNodes[i];

          textToCopy += child.textContent;
      }

      navigator.clipboard.writeText(textToCopy)
          .then(function() {
              const button = document.getElementById('lua-copy-image')
              button.src = '/img/check.png'
              button.style.height = '25px'
          })
          .catch(function(error) {
              console.error('Unable to copy text to clipboard:', error);
          });
  }
</script>
</body>
</html>
