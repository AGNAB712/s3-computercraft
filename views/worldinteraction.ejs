<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Turtle speakers</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/themes/prism.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/prism.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/components/prism-lua.min.js"></script>
  <link rel="stylesheet" href="/styles.css">
</head>
<body>
  <div class="container">
    <h1>World interaction</h1>
    <p>Just like how turtles can equip peripherals, they can equip tools as well. That doesn't mean they can't always interact with the world, though.</p>
    <br>
    <h2>Interaction functions:</h2>
  <h3>dig(side), digUp(side), digDown(side)</h3>
  <p>This lets the turtle mine a block either in front of it, above it, or below it</p>
  <p>Parameters:</p>
  <p>- side (Optional): if you have a tool equipped, you can input "left" or "right" depending on the side of the tool, and it will use that tool.</p>
  <br>
  <h3>place(text), placeUp(text), placeDown(text)</h3>
  <p>This lets the turtle place a block (in the active slot) either in front of it, above it, or below it</p>
  <p>Parameters:</p>
  <p>- text (Optional): if you're placing a sign, you can use the text parameter to write text on the sign. (why the fuck did the cc devs add this??? its funny but like.... why)</p>
  <br>
  <h3>detect(), detectUp(), detectDown()</h3>
  <p>Check if there is a solid block in front of/above/below the turtle. In this case, solid refers to any non-air or liquid block.</p>
  <p>Returns a boolean</p>
  <br>
  <h3>inspect(), inspectUp(), inspectDown()</h3>
  <p>Get information about the block in front of/above/below the turtle.</p>
  <p>The returned data from this is a little bit 𝓯𝓻𝓮𝓪𝓴𝔂 so here is an example stolen straight from tweaked.cc</p>
  <pre><img src="/img/copy.png" id="lua-copy-image" alt="Copy text" onclick="copyText()"><code class="language-lua" id="toCopy">local has_block, data = turtle.inspect()
if has_block then
  print(textutils.serialise(data))
  -- {
  --   name = "minecraft:oak_log",
  --   state = { axis = "x" },
  --   tags = { ["minecraft:logs"] = true, ... },
  -- }
else
  print("No block in front of the turtle")
end</code></pre>
<br>
  <h3>attack(side), attackUp(side), attackDown(side)</h3>
  <p>Attack an entity in front of/above/below the turtle.</p>
  <p>Also returns a boolean if an entity was attacked</p>
  <p>Parameters:</p>
  <p>- side (Optional): if you have a tool equipped, you can input "left" or "right" depending on the side of the tool, and it will use that tool. (a sword is best for this case quite obviously)</p>
    

    <%- sidebar %>

    <a href="https://tweaked.cc/module/turtle.html" target="_blank">Click here to learn more on tweaked.cc</a>
  </div>

<script>
  function copyText() {
      const parentElement = document.getElementById('toCopy');
      let textToCopy = '';

      for (let i = 0; i < parentElement.childNodes.length; i++) {
          const child = parentElement.childNodes[i];

          textToCopy += child.textContent;
      }

      navigator.clipboard.writeText(textToCopy)
          .then(function() {
              const button = document.getElementById('lua-copy-image')
              button.src = '/img/check.png'
              button.style.height = '25px'
          })
          .catch(function(error) {
              console.error('Unable to copy text to clipboard:', error);
          });
  }
</script>
</body>
</html>
